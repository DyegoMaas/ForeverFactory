name: build-and-test
on:
  workflow_dispatch:
  push:
    branches: 
      - main
    paths-ignore:
      - 'LICENSE'
      - 'README.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'LICENSE'
      - 'README.md'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: [ '6.0.x' ]
    name: Dotnet ${{ matrix.dotnet }} build
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Clean
        run: dotnet clean -c Debug

      - name: Build
        run: dotnet build -c Debug

      - name: Test
        run: dotnet test -c Debug --no-build -l trx --verbosity=normal
        
      - name: Calculate code coverage
        run: |
          dotnet new tool-manifest --force
          dotnet tool install coverlet.console
          
          DEBUG_TEST_ASSEMBLY=$(find ./tests/ForeverFactory.Tests/bin/Debug -type f -name ForeverFactory.Tests.dll | head -n 1)
          echo "Debug assembly $DEBUG_TEST_ASSEMBLY"
          dotnet coverlet $DEBUG_TEST_ASSEMBLY \
            --target "dotnet" --targetargs "test ./tests/ForeverFactory.Tests --no-build" \
            --format=opencover --use-source-link --output=opencover_coverage.xml

      - name: Publish code coverage as artifacts
        uses: actions/upload-artifact@v1
        with:
          name: CodeCoverageReport
          path: ./opencover_coverage.xml
          
      - name: Upload code coverage to Codecov
        run: |
          curl -s https://codecov.io/bash > codecov
          chmod +x codecov
          ./codecov -f "opencover_coverage.xml" -t ${{ secrets.CODECOV_TOKEN }}
          
      - name: Run Stryker
        run: |
          dotnet tool install dotnet-stryker
          dotnet stryker
          
      - name: Publish HTML results as artifacts
        uses: actions/upload-artifact@v1
        with:
          name: MutationResults
          path: ./tests/ForeverFactory.Tests/StrykerOutput